services:

  frontend:
    build:
      context: ./Frontend 
      dockerfile: Dockerfile
      args:
        NGINX_PORT: ${NGINX_PORT}
    ports:
      - "${NGINX_PORT}:80"
    container_name: sada-frontend
    env_file:
      - .env
    networks:
      - auth_network
    depends_on:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build: 
      context: ./Backend 
      dockerfile: Dockerfile
    container_name: sara-backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - RESET_TOKEN_SECRET=${RESET_TOKEN_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - /app/node_modules
    depends_on:
      - db
    networks:
      - auth_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    stop_grace_period: 30s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    container_name: sara-mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    env_file:
      - .env 
    networks:
      - auth_network
    restart: always
    stop_grace_period: 30s

volumes:
  mysql_data:
     name: sara_mysql_data

networks:
  auth_network:
    driver: bridge